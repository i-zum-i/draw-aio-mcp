version: '3.8'

services:
  backend:
    build:
      context: .
      target: backend
    ports:
      - "8001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - FRONTEND_URL=${FRONTEND_URL:-https://your-domain.com}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - TEMP_FILE_DIR=/app/temp
      - DRAWIO_CLI_PATH=drawio
      - REQUEST_TIMEOUT=30000
      - RATE_LIMIT_MAX_REQUESTS=20
      - RATE_LIMIT_WINDOW_MS=60000
      - LLM_CACHE_TTL=3600000
      - LLM_CACHE_MAX_SIZE=100
      - LOG_LEVEL=warn
    volumes:
      - temp_files:/app/temp
      - /var/log/ai-diagram-generator:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      target: frontend
    ports:
      - "8000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-https://api.your-domain.com}
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  temp_files:
    driver: local